# coding=utf-8
from setuptools import setup, Extension
import glob
import os.path


_fast = Extension('fast.bin._fast',
                include_dirs=[
                    '.',
                    '..',
                    '@FAST_BINARY_DIR@/include/',
                    '@FAST_BINARY_DIR@/include/eigen3/',
                    '@FAST_BINARY_DIR@/include/QWidgets/',
                    '@FAST_BINARY_DIR@/include/QtCore',
                    '@FAST_BINARY_DIR@/include/QtWidgets',
                    '@FAST_BINARY_DIR@/include/QtOpenGL',
                    '@FAST_BINARY_DIR@/include/QtPrintSupport',
                    '@FAST_BINARY_DIR@/include/QtGui',
                    '@FAST_SOURCE_DIR@/source/',
                    '@NUMPY_INCLUDE_DIR@',
                ],
                library_dirs=['@FAST_BINARY_DIR@/lib/', os.path.dirname('@OpenCL_LIBRARIES@')],
                #runtime_library_dirs=['@FAST_BINARY_DIR@/bin/'],
                sources=['fast/PyFASTPYTHON_wrap.cxx'],
                libraries=[ # Libraries to link with
                    'FAST',
                    'Qt5Core',
                	'Qt5Widgets',
                	'Qt5Gui',
                	'Qt5OpenGL',
                	'Qt5Multimedia',
                	'Qt5MultimediaWidgets',
                    'Qt5PrintSupport',
                    'Qt5Network',
                	'OpenCL',
                	'@OPENGL_LIBRARIES@',
                ],
                #undef_macros=['ERROR', 'min', 'max'],
                #define_macros=[('NOMINMAX',), ('NOGDI',)],
                extra_compile_args=['/bigobj', '/nologo', '/MD', '/EHsc', '-DNOMINMAX', '-DNOGDI'],
            )

def get_all_filenames(path):
    files = []
    for root, dirs, filenames in os.walk(path):
       for name in filenames:
          files.append(os.path.join(root[5:], name))
          #print(os.path.join(root[5:],name))
    return files

# Get long description from README
with open("@FAST_SOURCE_DIR@/README.md", "r", encoding='utf-8') as fh:
    long_description = fh.read()

setup(name='pyFAST',    # Distribution name
      version='@FAST_VERSION@',
      description='Python bindings of FAST - a framework for high performance medical image computing and visualization on heterogeneous systems utilizing multi-core CPUs and GPUs.',
      long_description=long_description,
      long_description_content_type="text/markdown",
      author='Erik Smistad',
      author_email='ersmistad@gmail.com',
      url='https://github.com/smistad/FAST',
      license='BSD 2-clause (package include binary dependencies with other licences, see README)',
      packages=['fast'],    # Package name
      setup_requires=['wheel'],
      ext_modules=[_fast],
      #data_files=[('bin', DLL_list)],
      package_data={'': [
        'bin/*.dll',
        'bin/plugins.xml',
        'bin/fast_configuration.txt',
        'README.md',
        'pipelines/**/*',
        ] + get_all_filenames('fast/licenses/')
        + get_all_filenames('fast/kernels/')
        + get_all_filenames('fast/plugins/')
        + get_all_filenames('fast/doc/')
      },
      classifiers=[
        'Development Status :: 4 - Beta',
        'Operating System :: Microsoft :: Windows',
        'Operating System :: POSIX :: Linux',
        'Programming Language :: C++',
        'Programming Language :: Python :: 3 :: Only',
        'Environment :: GPU',
        'Topic :: Scientific/Engineering :: Artificial Intelligence',
        'Topic :: Scientific/Engineering :: Image Processing',
        'Topic :: Scientific/Engineering :: Medical Science Apps.',
        'Topic :: Scientific/Engineering :: Visualization',
      ],
      install_requires=['numpy'],
      python_requires='>=3'
)
